{"version":3,"sources":["../src/index.ts","../src/runtime.ts","../src/clients/openindia.ts"],"sourcesContent":["/// <reference path=\"./global.d.ts\" />\nexport * from './clients/openindia';\nexport { authorizedFetcher, type AuthorizedFetcherOptions } from './runtime';\n","export interface AuthorizedFetcherOptions extends RequestInit {\n  /** Optional bearer token that will be inserted into the Authorization header */\n  token?: string;\n  /** Override base URL if different from environment default */\n  baseUrl?: string;\n}\n\nconst defaultBaseUrl =\n  typeof process !== 'undefined'\n    ? process.env.NEXT_PUBLIC_API_URL || process.env.API_URL || ''\n    : '';\n\nfunction buildHeaders(initHeaders?: RequestInit['headers'], token?: string) {\n  const headers = new Headers(initHeaders || undefined);\n  if (token) {\n    headers.set('Authorization', `Bearer ${token}`);\n  }\n  return headers;\n}\n\nexport async function authorizedFetcher<TResponse>(\n  url: string,\n  init?: AuthorizedFetcherOptions,\n): Promise<TResponse> {\n  const { token, baseUrl, headers: initHeaders, ...rest } = init || {};\n  const headers = buildHeaders(initHeaders, token);\n\n  if (rest.body && !headers.has('content-type')) {\n    headers.set('content-type', 'application/json');\n  }\n\n  const resolvedBaseUrl = (baseUrl ?? defaultBaseUrl).replace(/\\/$/, '');\n  const response = await fetch(`${resolvedBaseUrl}${url}`, {\n    ...rest,\n    headers,\n    credentials: rest.credentials ?? 'include',\n  });\n\n  if (!response.ok) {\n    let errorPayload: unknown;\n    const contentType = response.headers.get('content-type') || '';\n    if (contentType.includes('application/json')) {\n      errorPayload = await response.json().catch(() => undefined);\n    } else {\n      errorPayload = await response.text().catch(() => undefined);\n    }\n\n    const error = new Error(\n      `API request failed: ${response.status} ${response.statusText}`,\n    ) as Error & { status?: number; payload?: unknown };\n    error.status = response.status;\n    error.payload = errorPayload;\n    throw error;\n  }\n\n  if (response.status === 204) {\n    return undefined as unknown as TResponse;\n  }\n\n  const responseContentType = response.headers.get('content-type') || '';\n  if (responseContentType.includes('application/json')) {\n    return (await response.json()) as TResponse;\n  }\n\n  return (await response.text()) as unknown as TResponse;\n}\n","/**\n * Generated by orval v6.31.0 üç∫\n * Do not edit manually.\n * Education API\n * Core API contract for OpenIndia web clients and internal tools\n * OpenAPI spec version: 0.2.0\n */\nimport { authorizedFetcher } from \"../runtime\";\n\n// https://stackoverflow.com/questions/49579094/typescript-conditional-types-filter-out-readonly-properties-pick-only-requir/49579497#49579497\ntype IfEquals<X, Y, A = X, B = never> =\n  (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2 ? A : B;\n\ntype WritableKeys<T> = {\n  [P in keyof T]-?: IfEquals<\n    { [Q in P]: T[P] },\n    { -readonly [Q in P]: T[P] },\n    P\n  >;\n}[keyof T];\n\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (\n  k: infer I,\n) => void\n  ? I\n  : never;\ntype DistributeReadOnlyOverUnions<T> = T extends any ? NonReadonly<T> : never;\n\ntype Writable<T> = Pick<T, WritableKeys<T>>;\ntype NonReadonly<T> = [T] extends [UnionToIntersection<T>]\n  ? {\n      [P in keyof Writable<T>]: T[P] extends object\n        ? NonReadonly<NonNullable<T[P]>>\n        : T[P];\n    }\n  : DistributeReadOnlyOverUnions<T>;\n\nexport type GetRiskQueueParams = {\n  /**\n   * Free-text search (name/email)\n   */\n  q?: string;\n  /**\n   * Minimum risk score inclusive\n   */\n  min?: number;\n  /**\n   * Maximum risk score inclusive\n   */\n  max?: number;\n};\n\nexport type SearchLecturesParams = {\n  /**\n   * Free text query\n   */\n  q?: string;\n};\n\nexport type SearchCoursesParams = {\n  /**\n   * Free text query\n   */\n  q?: string;\n};\n\nexport interface CreatedResource {\n  id: string;\n}\n\nexport interface ScheduleOfficeHourRequest {\n  scheduledAt: string;\n  with: string;\n}\n\nexport interface CreateTicketRequest {\n  body?: string;\n  title: string;\n}\n\nexport type StudentDetailAllOfTicketsItemStatus =\n  (typeof StudentDetailAllOfTicketsItemStatus)[keyof typeof StudentDetailAllOfTicketsItemStatus];\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const StudentDetailAllOfTicketsItemStatus = {\n  open: \"open\",\n  closed: \"closed\",\n} as const;\n\nexport type StudentDetailAllOfTicketsItem = {\n  createdAt: string;\n  id: string;\n  status: StudentDetailAllOfTicketsItemStatus;\n  title: string;\n};\n\nexport type StudentDetailAllOfOfficeHoursItemStatus =\n  (typeof StudentDetailAllOfOfficeHoursItemStatus)[keyof typeof StudentDetailAllOfOfficeHoursItemStatus];\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const StudentDetailAllOfOfficeHoursItemStatus = {\n  scheduled: \"scheduled\",\n  completed: \"completed\",\n  canceled: \"canceled\",\n} as const;\n\nexport type StudentDetailAllOfOfficeHoursItem = {\n  id: string;\n  scheduledAt: string;\n  status: StudentDetailAllOfOfficeHoursItemStatus;\n  with: string;\n};\n\nexport type StudentDetailAllOfNotesItem = {\n  author: string;\n  body: string;\n  createdAt: string;\n  id: string;\n};\n\nexport type StudentDetailAllOfEnrollmentsItem = {\n  course: string;\n  courseId: string;\n  /**\n   * @minimum 0\n   * @maximum 100\n   */\n  progressPct: number;\n  startedAt: string;\n};\n\nexport type StudentDetailAllOf = {\n  enrollments: StudentDetailAllOfEnrollmentsItem[];\n  notes: StudentDetailAllOfNotesItem[];\n  officeHours: StudentDetailAllOfOfficeHoursItem[];\n  progressVelocity: number;\n  tickets: StudentDetailAllOfTicketsItem[];\n};\n\nexport interface RiskStudent {\n  /** @nullable */\n  course?: string | null;\n  email: string;\n  id: string;\n  name: string;\n  /**\n   * @minimum 0\n   * @maximum 100\n   */\n  riskScore: number;\n}\n\nexport type StudentDetail = RiskStudent & StudentDetailAllOf;\n\nexport type EnqueueJobRequestPayload = { [key: string]: unknown };\n\nexport interface EnqueueJobRequest {\n  payload: EnqueueJobRequestPayload;\n  /** @maxLength 128 */\n  type: string;\n}\n\nexport type OutboxJobPayload = { [key: string]: unknown };\n\nexport interface OutboxJob {\n  createdAt: string;\n  id: string;\n  payload: OutboxJobPayload;\n  /** @nullable */\n  processedAt?: string | null;\n  /** @maxLength 128 */\n  type: string;\n}\n\nexport interface ReindexResponse {\n  /** @minimum 0 */\n  enqueued: number;\n  ok: boolean;\n}\n\nexport interface LectureSearchHit {\n  id: string;\n  moduleId?: string;\n  /** @nullable */\n  summary?: string | null;\n  title: string;\n}\n\nexport type CourseSearchHitVisibility =\n  (typeof CourseSearchHitVisibility)[keyof typeof CourseSearchHitVisibility];\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const CourseSearchHitVisibility = {\n  public: \"public\",\n  private: \"private\",\n  unlisted: \"unlisted\",\n} as const;\n\nexport interface CourseSearchHit {\n  /** @nullable */\n  description?: string | null;\n  id: string;\n  slug?: string;\n  tags?: string[];\n  title: string;\n  visibility?: CourseSearchHitVisibility;\n}\n\nexport interface CreateLectureRequest {\n  /** @nullable */\n  contentMd?: string | null;\n  moduleId: string;\n  /** @minimum 0 */\n  position: number;\n  /** @nullable */\n  summary?: string | null;\n  title: string;\n}\n\nexport interface Lecture {\n  /** @nullable */\n  contentMd?: string | null;\n  createdAt?: string;\n  /**\n   * @minimum 1\n   * @maximum 14400\n   */\n  durationSeconds?: number;\n  id?: string;\n  isPublished?: boolean;\n  moduleId: string;\n  /** @minimum 0 */\n  position: number;\n  /**\n   * @maxLength 2000\n   * @nullable\n   */\n  summary?: string | null;\n  /**\n   * @minLength 2\n   * @maxLength 160\n   */\n  title: string;\n  updatedAt?: string;\n}\n\nexport interface EnrollmentResponse {\n  enrollmentId: string;\n  success: boolean;\n}\n\nexport type UpdateCourseRequestVisibility =\n  (typeof UpdateCourseRequestVisibility)[keyof typeof UpdateCourseRequestVisibility];\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const UpdateCourseRequestVisibility = {\n  public: \"public\",\n  private: \"private\",\n  unlisted: \"unlisted\",\n} as const;\n\nexport interface UpdateCourseRequest {\n  /** @nullable */\n  description?: string | null;\n  estimatedMinutes?: number;\n  orgId?: string;\n  slug?: string;\n  tags?: string[];\n  title?: string;\n  visibility?: UpdateCourseRequestVisibility;\n}\n\nexport type CreateCourseRequestAllOf = {\n  readonly createdAt?: unknown;\n  readonly id?: unknown;\n  readonly updatedAt?: unknown;\n};\n\nexport type CourseVisibility =\n  (typeof CourseVisibility)[keyof typeof CourseVisibility];\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const CourseVisibility = {\n  public: \"public\",\n  private: \"private\",\n  unlisted: \"unlisted\",\n} as const;\n\nexport interface Course {\n  createdAt?: string;\n  /**\n   * @maxLength 4000\n   * @nullable\n   */\n  description?: string | null;\n  /**\n   * @minimum 1\n   * @maximum 100000\n   */\n  estimatedMinutes?: number;\n  id?: string;\n  orgId: string;\n  /**\n   * @minLength 3\n   * @maxLength 120\n   * @pattern ^[a-z0-9-]+$\n   */\n  slug: string;\n  /** @maxItems 20 */\n  tags?: string[];\n  /**\n   * @minLength 3\n   * @maxLength 160\n   */\n  title: string;\n  updatedAt?: string;\n  visibility?: CourseVisibility;\n}\n\nexport type CreateCourseRequest = Course & CreateCourseRequestAllOf;\n\nexport interface AuthTokenResponse {\n  /** JWT bearer token */\n  access_token: string;\n}\n\nexport interface AuthLoginRequest {\n  email: string;\n  /** @minLength 6 */\n  password: string;\n}\n\n/**\n * @summary Authenticate a user by email and password\n */\nexport type loginResponse = {\n  data: AuthTokenResponse;\n  status: number;\n};\n\nexport const getLoginUrl = () => {\n  return `/api/auth/login`;\n};\n\nexport const login = async (\n  authLoginRequest: AuthLoginRequest,\n  options?: RequestInit,\n): Promise<loginResponse> => {\n  return authorizedFetcher<Promise<loginResponse>>(getLoginUrl(), {\n    ...options,\n    method: \"POST\",\n    body: JSON.stringify(authLoginRequest),\n  });\n};\n\n/**\n * @summary List all courses for the current tenant\n */\nexport type listCoursesResponse = {\n  data: Course[];\n  status: number;\n};\n\nexport const getListCoursesUrl = () => {\n  return `/api/courses`;\n};\n\nexport const listCourses = async (\n  options?: RequestInit,\n): Promise<listCoursesResponse> => {\n  return authorizedFetcher<Promise<listCoursesResponse>>(getListCoursesUrl(), {\n    ...options,\n    method: \"GET\",\n  });\n};\n\n/**\n * @summary Create a new course\n */\nexport type createCourseResponse = {\n  data: Course;\n  status: number;\n};\n\nexport const getCreateCourseUrl = () => {\n  return `/api/courses`;\n};\n\nexport const createCourse = async (\n  createCourseRequest: NonReadonly<CreateCourseRequest>,\n  options?: RequestInit,\n): Promise<createCourseResponse> => {\n  return authorizedFetcher<Promise<createCourseResponse>>(\n    getCreateCourseUrl(),\n    {\n      ...options,\n      method: \"POST\",\n      body: JSON.stringify(createCourseRequest),\n    },\n  );\n};\n\n/**\n * @summary Update a course\n */\nexport type updateCourseResponse = {\n  data: Course;\n  status: number;\n};\n\nexport const getUpdateCourseUrl = (id: string) => {\n  return `/api/courses/${id}`;\n};\n\nexport const updateCourse = async (\n  id: string,\n  updateCourseRequest: UpdateCourseRequest,\n  options?: RequestInit,\n): Promise<updateCourseResponse> => {\n  return authorizedFetcher<Promise<updateCourseResponse>>(\n    getUpdateCourseUrl(id),\n    {\n      ...options,\n      method: \"PATCH\",\n      body: JSON.stringify(updateCourseRequest),\n    },\n  );\n};\n\n/**\n * @summary Enroll the active user in a course\n */\nexport type enrollInCourseResponse = {\n  data: EnrollmentResponse;\n  status: number;\n};\n\nexport const getEnrollInCourseUrl = (id: string) => {\n  return `/api/courses/${id}/enroll`;\n};\n\nexport const enrollInCourse = async (\n  id: string,\n  options?: RequestInit,\n): Promise<enrollInCourseResponse> => {\n  return authorizedFetcher<Promise<enrollInCourseResponse>>(\n    getEnrollInCourseUrl(id),\n    {\n      ...options,\n      method: \"POST\",\n    },\n  );\n};\n\n/**\n * @summary Search published courses\n */\nexport type searchCoursesResponse = {\n  data: CourseSearchHit[];\n  status: number;\n};\n\nexport const getSearchCoursesUrl = (params?: SearchCoursesParams) => {\n  const normalizedParams = new URLSearchParams();\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value === null) {\n      normalizedParams.append(key, \"null\");\n    } else if (value !== undefined) {\n      normalizedParams.append(key, value.toString());\n    }\n  });\n\n  return `/api/courses/search?${normalizedParams.toString()}`;\n};\n\nexport const searchCourses = async (\n  params?: SearchCoursesParams,\n  options?: RequestInit,\n): Promise<searchCoursesResponse> => {\n  return authorizedFetcher<Promise<searchCoursesResponse>>(\n    getSearchCoursesUrl(params),\n    {\n      ...options,\n      method: \"GET\",\n    },\n  );\n};\n\n/**\n * @summary List lessons for all courses\n */\nexport type listLecturesResponse = {\n  data: Lecture[];\n  status: number;\n};\n\nexport const getListLecturesUrl = () => {\n  return `/api/lessons`;\n};\n\nexport const listLectures = async (\n  options?: RequestInit,\n): Promise<listLecturesResponse> => {\n  return authorizedFetcher<Promise<listLecturesResponse>>(\n    getListLecturesUrl(),\n    {\n      ...options,\n      method: \"GET\",\n    },\n  );\n};\n\n/**\n * @summary Create a lesson under a module\n */\nexport type createLectureResponse = {\n  data: Lecture;\n  status: number;\n};\n\nexport const getCreateLectureUrl = () => {\n  return `/api/lessons`;\n};\n\nexport const createLecture = async (\n  createLectureRequest: CreateLectureRequest,\n  options?: RequestInit,\n): Promise<createLectureResponse> => {\n  return authorizedFetcher<Promise<createLectureResponse>>(\n    getCreateLectureUrl(),\n    {\n      ...options,\n      method: \"POST\",\n      body: JSON.stringify(createLectureRequest),\n    },\n  );\n};\n\n/**\n * @summary Search lessons by title or content\n */\nexport type searchLecturesResponse = {\n  data: LectureSearchHit[];\n  status: number;\n};\n\nexport const getSearchLecturesUrl = (params?: SearchLecturesParams) => {\n  const normalizedParams = new URLSearchParams();\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value === null) {\n      normalizedParams.append(key, \"null\");\n    } else if (value !== undefined) {\n      normalizedParams.append(key, value.toString());\n    }\n  });\n\n  return `/api/lessons/search?${normalizedParams.toString()}`;\n};\n\nexport const searchLectures = async (\n  params?: SearchLecturesParams,\n  options?: RequestInit,\n): Promise<searchLecturesResponse> => {\n  return authorizedFetcher<Promise<searchLecturesResponse>>(\n    getSearchLecturesUrl(params),\n    {\n      ...options,\n      method: \"GET\",\n    },\n  );\n};\n\n/**\n * @summary Trigger re-index background job\n */\nexport type reindexSearchResponse = {\n  data: ReindexResponse;\n  status: number;\n};\n\nexport const getReindexSearchUrl = () => {\n  return `/api/v1/search/reindex`;\n};\n\nexport const reindexSearch = async (\n  options?: RequestInit,\n): Promise<reindexSearchResponse> => {\n  return authorizedFetcher<Promise<reindexSearchResponse>>(\n    getReindexSearchUrl(),\n    {\n      ...options,\n      method: \"POST\",\n    },\n  );\n};\n\n/**\n * @summary List queued outbox jobs\n */\nexport type listJobsResponse = {\n  data: OutboxJob[];\n  status: number;\n};\n\nexport const getListJobsUrl = () => {\n  return `/api/jobs/outbox`;\n};\n\nexport const listJobs = async (\n  options?: RequestInit,\n): Promise<listJobsResponse> => {\n  return authorizedFetcher<Promise<listJobsResponse>>(getListJobsUrl(), {\n    ...options,\n    method: \"GET\",\n  });\n};\n\n/**\n * @summary Enqueue a job into the outbox\n */\nexport type enqueueJobResponse = {\n  data: OutboxJob;\n  status: number;\n};\n\nexport const getEnqueueJobUrl = () => {\n  return `/api/jobs/outbox`;\n};\n\nexport const enqueueJob = async (\n  enqueueJobRequest: EnqueueJobRequest,\n  options?: RequestInit,\n): Promise<enqueueJobResponse> => {\n  return authorizedFetcher<Promise<enqueueJobResponse>>(getEnqueueJobUrl(), {\n    ...options,\n    method: \"POST\",\n    body: JSON.stringify(enqueueJobRequest),\n  });\n};\n\n/**\n * @summary List at-risk students (risk triage queue)\n */\nexport type getRiskQueueResponse = {\n  data: RiskStudent[];\n  status: number;\n};\n\nexport const getGetRiskQueueUrl = (params?: GetRiskQueueParams) => {\n  const normalizedParams = new URLSearchParams();\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value === null) {\n      normalizedParams.append(key, \"null\");\n    } else if (value !== undefined) {\n      normalizedParams.append(key, value.toString());\n    }\n  });\n\n  return `/api/v1/ssu/risk?${normalizedParams.toString()}`;\n};\n\nexport const getRiskQueue = async (\n  params?: GetRiskQueueParams,\n  options?: RequestInit,\n): Promise<getRiskQueueResponse> => {\n  return authorizedFetcher<Promise<getRiskQueueResponse>>(\n    getGetRiskQueueUrl(params),\n    {\n      ...options,\n      method: \"GET\",\n    },\n  );\n};\n\n/**\n * @summary Get student detail profile\n */\nexport type getStudentResponse = {\n  data: StudentDetail;\n  status: number;\n};\n\nexport const getGetStudentUrl = (id: string) => {\n  return `/api/v1/ssu/students/${id}`;\n};\n\nexport const getStudent = async (\n  id: string,\n  options?: RequestInit,\n): Promise<getStudentResponse> => {\n  return authorizedFetcher<Promise<getStudentResponse>>(getGetStudentUrl(id), {\n    ...options,\n    method: \"GET\",\n  });\n};\n\n/**\n * @summary Create a support ticket for a student\n */\nexport type createTicketResponse = {\n  data: CreatedResource;\n  status: number;\n};\n\nexport const getCreateTicketUrl = (id: string) => {\n  return `/api/v1/ssu/students/${id}/tickets`;\n};\n\nexport const createTicket = async (\n  id: string,\n  createTicketRequest: CreateTicketRequest,\n  options?: RequestInit,\n): Promise<createTicketResponse> => {\n  return authorizedFetcher<Promise<createTicketResponse>>(\n    getCreateTicketUrl(id),\n    {\n      ...options,\n      method: \"POST\",\n      body: JSON.stringify(createTicketRequest),\n    },\n  );\n};\n\n/**\n * @summary Schedule an office hour session for a student\n */\nexport type scheduleOfficeHourResponse = {\n  data: CreatedResource;\n  status: number;\n};\n\nexport const getScheduleOfficeHourUrl = (id: string) => {\n  return `/api/v1/ssu/students/${id}/office-hours`;\n};\n\nexport const scheduleOfficeHour = async (\n  id: string,\n  scheduleOfficeHourRequest: ScheduleOfficeHourRequest,\n  options?: RequestInit,\n): Promise<scheduleOfficeHourResponse> => {\n  return authorizedFetcher<Promise<scheduleOfficeHourResponse>>(\n    getScheduleOfficeHourUrl(id),\n    {\n      ...options,\n      method: \"POST\",\n      body: JSON.stringify(scheduleOfficeHourRequest),\n    },\n  );\n};\n"],"mappings":"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","names":[]}
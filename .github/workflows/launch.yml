
name: Launch Codex Job
on: { workflow_dispatch: {}, push: { paths: [ "codex.job.yaml" ] } }

jobs:
  decide:
    runs-on: ubuntu-latest
    outputs: { req_gpu: ${{ steps.p.outputs.g }}, req_tpu: ${{ steps.p.outputs.t }}, provider: ${{ steps.p.outputs.h }} }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install pyyaml
      - id: p
        run: |
          python - <<'PY'
          import yaml, os
          s=yaml.safe_load(open('codex.job.yaml')); r=s['requirements']; h=s.get('preferences',{}).get('provider_hint','auto')
          with open(os.environ['GITHUB_OUTPUT'],'a') as f:
            f.write(f"g={'true' if r.get('gpu') else 'false'}\n")
            f.write(f"t={'true' if r.get('tpu') else 'false'}\n")
            f.write(f"h={h}\n")
          PY

  aws-gpu:
    needs: decide
    if: needs.decide.outputs.req_tpu != 'true' && needs.decide.outputs.req_gpu == 'true' && (needs.decide.outputs.provider == 'aws' || needs.decide.outputs.provider == 'auto')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install boto3 sagemaker pyyaml
      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: python infra/aws_sagemaker.py codex.job.yaml

  gcp-tpu:
    needs: decide
    if: needs.decide.outputs.req_tpu == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with: { credentials_json: ${{ secrets.GCP_SA_KEY }} }
      - uses: google-github-actions/setup-gcloud@v2
      - env: { CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }} }
        run: python infra/gcp_tpu_vm.py codex.job.yaml

  cpu-notify:
    needs: decide
    if: needs.decide.outputs.req_gpu != 'true' && needs.decide.outputs.req_tpu != 'true'
    runs-on: ubuntu-latest
    permissions: { issues: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner, repo: context.repo.repo,
              title: "CPU job ready",
              body: "Run `make cpu-oracle` on your VM. See infra/oracle_arm_ingest.sh."
            })
